/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.Product;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.product</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record5<Long, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product.id</code>.
     */
    public ProductRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.product.category</code>.
     */
    public ProductRecord setCategory(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product.category</code>.
     */
    public String getCategory() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product.name</code>.
     */
    public ProductRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product.prime_cost</code>.
     */
    public ProductRecord setPrimeCost(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product.prime_cost</code>.
     */
    public Integer getPrimeCost() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.product.type</code>.
     */
    public ProductRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.product.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.CATEGORY;
    }

    @Override
    public Field<String> field3() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Product.PRODUCT.PRIME_COST;
    }

    @Override
    public Field<String> field5() {
        return Product.PRODUCT.TYPE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCategory();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getPrimeCost();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCategory();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getPrimeCost();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public ProductRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public ProductRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value4(Integer value) {
        setPrimeCost(value);
        return this;
    }

    @Override
    public ProductRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public ProductRecord values(Long value1, String value2, String value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Long id, String category, String name, Integer primeCost, String type) {
        super(Product.PRODUCT);

        setId(id);
        setCategory(category);
        setName(name);
        setPrimeCost(primeCost);
        setType(type);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(com.sldd.persistence.tables.pojos.Product value) {
        super(Product.PRODUCT);

        if (value != null) {
            setId(value.getId());
            setCategory(value.getCategory());
            setName(value.getName());
            setPrimeCost(value.getPrimeCost());
            setType(value.getType());
        }
    }
}
