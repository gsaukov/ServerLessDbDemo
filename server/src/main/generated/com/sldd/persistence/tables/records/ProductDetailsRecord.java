/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.ProductDetails;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.product_details</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDetailsRecord extends UpdatableRecordImpl<ProductDetailsRecord> implements Record4<Long, Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_details.id</code>.
     */
    public ProductDetailsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product_details.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.product_details.quantity</code>.
     */
    public ProductDetailsRecord setQuantity(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product_details.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.product_details.sell_cost</code>.
     */
    public ProductDetailsRecord setSellCost(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product_details.sell_cost</code>.
     */
    public Integer getSellCost() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.product_details.product_id</code>.
     */
    public ProductDetailsRecord setProductId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product_details.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, Integer, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, Integer, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ProductDetails.PRODUCT_DETAILS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ProductDetails.PRODUCT_DETAILS.QUANTITY;
    }

    @Override
    public Field<Integer> field3() {
        return ProductDetails.PRODUCT_DETAILS.SELL_COST;
    }

    @Override
    public Field<Long> field4() {
        return ProductDetails.PRODUCT_DETAILS.PRODUCT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getQuantity();
    }

    @Override
    public Integer component3() {
        return getSellCost();
    }

    @Override
    public Long component4() {
        return getProductId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getQuantity();
    }

    @Override
    public Integer value3() {
        return getSellCost();
    }

    @Override
    public Long value4() {
        return getProductId();
    }

    @Override
    public ProductDetailsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductDetailsRecord value2(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public ProductDetailsRecord value3(Integer value) {
        setSellCost(value);
        return this;
    }

    @Override
    public ProductDetailsRecord value4(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductDetailsRecord values(Long value1, Integer value2, Integer value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductDetailsRecord
     */
    public ProductDetailsRecord() {
        super(ProductDetails.PRODUCT_DETAILS);
    }

    /**
     * Create a detached, initialised ProductDetailsRecord
     */
    public ProductDetailsRecord(Long id, Integer quantity, Integer sellCost, Long productId) {
        super(ProductDetails.PRODUCT_DETAILS);

        setId(id);
        setQuantity(quantity);
        setSellCost(sellCost);
        setProductId(productId);
    }

    /**
     * Create a detached, initialised ProductDetailsRecord
     */
    public ProductDetailsRecord(com.sldd.persistence.tables.pojos.ProductDetails value) {
        super(ProductDetails.PRODUCT_DETAILS);

        if (value != null) {
            setId(value.getId());
            setQuantity(value.getQuantity());
            setSellCost(value.getSellCost());
            setProductId(value.getProductId());
        }
    }
}
