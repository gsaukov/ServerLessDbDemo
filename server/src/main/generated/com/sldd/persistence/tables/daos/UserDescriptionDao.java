/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.daos;


import com.sldd.persistence.tables.UserDescription;
import com.sldd.persistence.tables.records.UserDescriptionRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.user_description</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDescriptionDao extends DAOImpl<UserDescriptionRecord, com.sldd.persistence.tables.pojos.UserDescription, Long> {

    /**
     * Create a new UserDescriptionDao without any configuration
     */
    public UserDescriptionDao() {
        super(UserDescription.USER_DESCRIPTION, com.sldd.persistence.tables.pojos.UserDescription.class);
    }

    /**
     * Create a new UserDescriptionDao with an attached configuration
     */
    public UserDescriptionDao(Configuration configuration) {
        super(UserDescription.USER_DESCRIPTION, com.sldd.persistence.tables.pojos.UserDescription.class, configuration);
    }

    @Override
    public Long getId(com.sldd.persistence.tables.pojos.UserDescription object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserDescription.USER_DESCRIPTION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchById(Long... values) {
        return fetch(UserDescription.USER_DESCRIPTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sldd.persistence.tables.pojos.UserDescription fetchOneById(Long value) {
        return fetchOne(UserDescription.USER_DESCRIPTION.ID, value);
    }

    /**
     * Fetch records that have <code>relation_type_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchRangeOfRelationTypeId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserDescription.USER_DESCRIPTION.RELATION_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>relation_type_id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchByRelationTypeId(Long... values) {
        return fetch(UserDescription.USER_DESCRIPTION.RELATION_TYPE_ID, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchRangeOfRoleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserDescription.USER_DESCRIPTION.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.UserDescription> fetchByRoleId(Long... values) {
        return fetch(UserDescription.USER_DESCRIPTION.ROLE_ID, values);
    }
}
