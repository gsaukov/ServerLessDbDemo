/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.daos;


import com.sldd.persistence.tables.ProductDetails;
import com.sldd.persistence.tables.records.ProductDetailsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.product_details</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDetailsDao extends DAOImpl<ProductDetailsRecord, com.sldd.persistence.tables.pojos.ProductDetails, Long> {

    /**
     * Create a new ProductDetailsDao without any configuration
     */
    public ProductDetailsDao() {
        super(ProductDetails.PRODUCT_DETAILS, com.sldd.persistence.tables.pojos.ProductDetails.class);
    }

    /**
     * Create a new ProductDetailsDao with an attached configuration
     */
    public ProductDetailsDao(Configuration configuration) {
        super(ProductDetails.PRODUCT_DETAILS, com.sldd.persistence.tables.pojos.ProductDetails.class, configuration);
    }

    @Override
    public Long getId(com.sldd.persistence.tables.pojos.ProductDetails object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProductDetails.PRODUCT_DETAILS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchById(Long... values) {
        return fetch(ProductDetails.PRODUCT_DETAILS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sldd.persistence.tables.pojos.ProductDetails fetchOneById(Long value) {
        return fetchOne(ProductDetails.PRODUCT_DETAILS.ID, value);
    }

    /**
     * Fetch records that have <code>quantity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchRangeOfQuantity(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProductDetails.PRODUCT_DETAILS.QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantity IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchByQuantity(Integer... values) {
        return fetch(ProductDetails.PRODUCT_DETAILS.QUANTITY, values);
    }

    /**
     * Fetch records that have <code>sell_cost BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchRangeOfSellCost(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProductDetails.PRODUCT_DETAILS.SELL_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sell_cost IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchBySellCost(Integer... values) {
        return fetch(ProductDetails.PRODUCT_DETAILS.SELL_COST, values);
    }

    /**
     * Fetch records that have <code>product_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchRangeOfProductId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProductDetails.PRODUCT_DETAILS.PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.ProductDetails> fetchByProductId(Long... values) {
        return fetch(ProductDetails.PRODUCT_DETAILS.PRODUCT_ID, values);
    }
}
