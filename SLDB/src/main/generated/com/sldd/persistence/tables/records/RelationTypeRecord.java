/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.RelationType;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.relation_type</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelationTypeRecord extends UpdatableRecordImpl<RelationTypeRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.relation_type.id</code>.
     */
    public RelationTypeRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.relation_type.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.relation_type.company_description_id</code>.
     */
    public RelationTypeRecord setCompanyDescriptionId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.relation_type.company_description_id</code>.
     */
    public Long getCompanyDescriptionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.relation_type.factory_description_id</code>.
     */
    public RelationTypeRecord setFactoryDescriptionId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.relation_type.factory_description_id</code>.
     */
    public Long getFactoryDescriptionId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RelationType.RELATION_TYPE.ID;
    }

    @Override
    public Field<Long> field2() {
        return RelationType.RELATION_TYPE.COMPANY_DESCRIPTION_ID;
    }

    @Override
    public Field<Long> field3() {
        return RelationType.RELATION_TYPE.FACTORY_DESCRIPTION_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCompanyDescriptionId();
    }

    @Override
    public Long component3() {
        return getFactoryDescriptionId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCompanyDescriptionId();
    }

    @Override
    public Long value3() {
        return getFactoryDescriptionId();
    }

    @Override
    public RelationTypeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RelationTypeRecord value2(Long value) {
        setCompanyDescriptionId(value);
        return this;
    }

    @Override
    public RelationTypeRecord value3(Long value) {
        setFactoryDescriptionId(value);
        return this;
    }

    @Override
    public RelationTypeRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RelationTypeRecord
     */
    public RelationTypeRecord() {
        super(RelationType.RELATION_TYPE);
    }

    /**
     * Create a detached, initialised RelationTypeRecord
     */
    public RelationTypeRecord(Long id, Long companyDescriptionId, Long factoryDescriptionId) {
        super(RelationType.RELATION_TYPE);

        setId(id);
        setCompanyDescriptionId(companyDescriptionId);
        setFactoryDescriptionId(factoryDescriptionId);
    }

    /**
     * Create a detached, initialised RelationTypeRecord
     */
    public RelationTypeRecord(com.sldd.persistence.tables.pojos.RelationType value) {
        super(RelationType.RELATION_TYPE);

        if (value != null) {
            setId(value.getId());
            setCompanyDescriptionId(value.getCompanyDescriptionId());
            setFactoryDescriptionId(value.getFactoryDescriptionId());
        }
    }
}
