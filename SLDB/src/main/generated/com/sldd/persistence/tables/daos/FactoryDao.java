/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.daos;


import com.sldd.persistence.tables.Factory;
import com.sldd.persistence.tables.records.FactoryRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.factory</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FactoryDao extends DAOImpl<FactoryRecord, com.sldd.persistence.tables.pojos.Factory, Long> {

    /**
     * Create a new FactoryDao without any configuration
     */
    public FactoryDao() {
        super(Factory.FACTORY, com.sldd.persistence.tables.pojos.Factory.class);
    }

    /**
     * Create a new FactoryDao with an attached configuration
     */
    public FactoryDao(Configuration configuration) {
        super(Factory.FACTORY, com.sldd.persistence.tables.pojos.Factory.class, configuration);
    }

    @Override
    public Long getId(com.sldd.persistence.tables.pojos.Factory object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Factory.FACTORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchById(Long... values) {
        return fetch(Factory.FACTORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sldd.persistence.tables.pojos.Factory fetchOneById(Long value) {
        return fetchOne(Factory.FACTORY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Factory.FACTORY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByName(String... values) {
        return fetch(Factory.FACTORY.NAME, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Factory.FACTORY.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByAddress(String... values) {
        return fetch(Factory.FACTORY.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Factory.FACTORY.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByPhone(String... values) {
        return fetch(Factory.FACTORY.PHONE, values);
    }

    /**
     * Fetch records that have <code>position BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfPosition(String lowerInclusive, String upperInclusive) {
        return fetchRange(Factory.FACTORY.POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByPosition(String... values) {
        return fetch(Factory.FACTORY.POSITION, values);
    }

    /**
     * Fetch records that have <code>industry BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfIndustry(String lowerInclusive, String upperInclusive) {
        return fetchRange(Factory.FACTORY.INDUSTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>industry IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByIndustry(String... values) {
        return fetch(Factory.FACTORY.INDUSTRY, values);
    }

    /**
     * Fetch records that have <code>producer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchRangeOfProducerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Factory.FACTORY.PRODUCER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>producer_id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Factory> fetchByProducerId(Long... values) {
        return fetch(Factory.FACTORY.PRODUCER_ID, values);
    }
}
