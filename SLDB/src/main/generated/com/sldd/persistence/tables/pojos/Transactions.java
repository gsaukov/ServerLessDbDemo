/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;


/**
 * The table <code>public.transactions</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transactions implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long       id;
    private final String     transactionType;
    private final BigDecimal amount;
    private final LocalDate  dateTime;
    private final Long       fromAccountId;
    private final Long       toAccountId;

    public Transactions(Transactions value) {
        this.id = value.id;
        this.transactionType = value.transactionType;
        this.amount = value.amount;
        this.dateTime = value.dateTime;
        this.fromAccountId = value.fromAccountId;
        this.toAccountId = value.toAccountId;
    }

    public Transactions(
        Long       id,
        String     transactionType,
        BigDecimal amount,
        LocalDate  dateTime,
        Long       fromAccountId,
        Long       toAccountId
    ) {
        this.id = id;
        this.transactionType = transactionType;
        this.amount = amount;
        this.dateTime = dateTime;
        this.fromAccountId = fromAccountId;
        this.toAccountId = toAccountId;
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.transactions.transaction_type</code>.
     */
    public String getTransactionType() {
        return this.transactionType;
    }

    /**
     * Getter for <code>public.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return this.amount;
    }

    /**
     * Getter for <code>public.transactions.date_time</code>.
     */
    public LocalDate getDateTime() {
        return this.dateTime;
    }

    /**
     * Getter for <code>public.transactions.from_account_id</code>.
     */
    public Long getFromAccountId() {
        return this.fromAccountId;
    }

    /**
     * Getter for <code>public.transactions.to_account_id</code>.
     */
    public Long getToAccountId() {
        return this.toAccountId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Transactions other = (Transactions) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (transactionType == null) {
            if (other.transactionType != null)
                return false;
        }
        else if (!transactionType.equals(other.transactionType))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (dateTime == null) {
            if (other.dateTime != null)
                return false;
        }
        else if (!dateTime.equals(other.dateTime))
            return false;
        if (fromAccountId == null) {
            if (other.fromAccountId != null)
                return false;
        }
        else if (!fromAccountId.equals(other.fromAccountId))
            return false;
        if (toAccountId == null) {
            if (other.toAccountId != null)
                return false;
        }
        else if (!toAccountId.equals(other.toAccountId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.transactionType == null) ? 0 : this.transactionType.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.dateTime == null) ? 0 : this.dateTime.hashCode());
        result = prime * result + ((this.fromAccountId == null) ? 0 : this.fromAccountId.hashCode());
        result = prime * result + ((this.toAccountId == null) ? 0 : this.toAccountId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transactions (");

        sb.append(id);
        sb.append(", ").append(transactionType);
        sb.append(", ").append(amount);
        sb.append(", ").append(dateTime);
        sb.append(", ").append(fromAccountId);
        sb.append(", ").append(toAccountId);

        sb.append(")");
        return sb.toString();
    }
}
