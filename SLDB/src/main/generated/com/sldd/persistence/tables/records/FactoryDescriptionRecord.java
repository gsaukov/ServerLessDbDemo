/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.FactoryDescription;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.factory_description</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FactoryDescriptionRecord extends UpdatableRecordImpl<FactoryDescriptionRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.factory_description.id</code>.
     */
    public FactoryDescriptionRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.factory_description.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.factory_description.phone</code>.
     */
    public FactoryDescriptionRecord setPhone(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.factory_description.phone</code>.
     */
    public String getPhone() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.factory_description.position</code>.
     */
    public FactoryDescriptionRecord setPosition(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.factory_description.position</code>.
     */
    public String getPosition() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FactoryDescription.FACTORY_DESCRIPTION.ID;
    }

    @Override
    public Field<String> field2() {
        return FactoryDescription.FACTORY_DESCRIPTION.PHONE;
    }

    @Override
    public Field<String> field3() {
        return FactoryDescription.FACTORY_DESCRIPTION.POSITION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPhone();
    }

    @Override
    public String component3() {
        return getPosition();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPhone();
    }

    @Override
    public String value3() {
        return getPosition();
    }

    @Override
    public FactoryDescriptionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FactoryDescriptionRecord value2(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public FactoryDescriptionRecord value3(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public FactoryDescriptionRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FactoryDescriptionRecord
     */
    public FactoryDescriptionRecord() {
        super(FactoryDescription.FACTORY_DESCRIPTION);
    }

    /**
     * Create a detached, initialised FactoryDescriptionRecord
     */
    public FactoryDescriptionRecord(Long id, String phone, String position) {
        super(FactoryDescription.FACTORY_DESCRIPTION);

        setId(id);
        setPhone(phone);
        setPosition(position);
    }

    /**
     * Create a detached, initialised FactoryDescriptionRecord
     */
    public FactoryDescriptionRecord(com.sldd.persistence.tables.pojos.FactoryDescription value) {
        super(FactoryDescription.FACTORY_DESCRIPTION);

        if (value != null) {
            setId(value.getId());
            setPhone(value.getPhone());
            setPosition(value.getPosition());
        }
    }
}
