/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.daos;


import com.sldd.persistence.tables.Product;
import com.sldd.persistence.tables.records.ProductRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.product</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDao extends DAOImpl<ProductRecord, com.sldd.persistence.tables.pojos.Product, Long> {

    /**
     * Create a new ProductDao without any configuration
     */
    public ProductDao() {
        super(Product.PRODUCT, com.sldd.persistence.tables.pojos.Product.class);
    }

    /**
     * Create a new ProductDao with an attached configuration
     */
    public ProductDao(Configuration configuration) {
        super(Product.PRODUCT, com.sldd.persistence.tables.pojos.Product.class, configuration);
    }

    @Override
    public Long getId(com.sldd.persistence.tables.pojos.Product object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Product.PRODUCT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchById(Long... values) {
        return fetch(Product.PRODUCT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sldd.persistence.tables.pojos.Product fetchOneById(Long value) {
        return fetchOne(Product.PRODUCT.ID, value);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Product.PRODUCT.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchByCategory(String... values) {
        return fetch(Product.PRODUCT.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Product.PRODUCT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchByName(String... values) {
        return fetch(Product.PRODUCT.NAME, values);
    }

    /**
     * Fetch records that have <code>prime_cost BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfPrimeCost(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Product.PRODUCT.PRIME_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prime_cost IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchByPrimeCost(Integer... values) {
        return fetch(Product.PRODUCT.PRIME_COST, values);
    }

    /**
     * Fetch records that have <code>producer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfProducerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Product.PRODUCT.PRODUCER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>producer_id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchByProducerId(Long... values) {
        return fetch(Product.PRODUCT.PRODUCER_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Product.PRODUCT.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Product> fetchByType(String... values) {
        return fetch(Product.PRODUCT.TYPE, values);
    }
}
