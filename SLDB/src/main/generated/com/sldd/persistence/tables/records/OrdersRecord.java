/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.Orders;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.orders</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record7<Long, Long, Long, LocalDate, LocalDate, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders.id</code>.
     */
    public OrdersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.orders.transaction_id</code>.
     */
    public OrdersRecord setTransactionId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.transaction_id</code>.
     */
    public Long getTransactionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.orders.total_cost</code>.
     */
    public OrdersRecord setTotalCost(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.total_cost</code>.
     */
    public Long getTotalCost() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.orders.end_date</code>.
     */
    public OrdersRecord setEndDate(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.end_date</code>.
     */
    public LocalDate getEndDate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.orders.start_date</code>.
     */
    public OrdersRecord setStartDate(LocalDate value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.start_date</code>.
     */
    public LocalDate getStartDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.orders.status</code>.
     */
    public OrdersRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.orders.user_id</code>.
     */
    public OrdersRecord setUserId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.orders.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, LocalDate, LocalDate, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, LocalDate, LocalDate, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Orders.ORDERS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Orders.ORDERS.TRANSACTION_ID;
    }

    @Override
    public Field<Long> field3() {
        return Orders.ORDERS.TOTAL_COST;
    }

    @Override
    public Field<LocalDate> field4() {
        return Orders.ORDERS.END_DATE;
    }

    @Override
    public Field<LocalDate> field5() {
        return Orders.ORDERS.START_DATE;
    }

    @Override
    public Field<String> field6() {
        return Orders.ORDERS.STATUS;
    }

    @Override
    public Field<Long> field7() {
        return Orders.ORDERS.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTransactionId();
    }

    @Override
    public Long component3() {
        return getTotalCost();
    }

    @Override
    public LocalDate component4() {
        return getEndDate();
    }

    @Override
    public LocalDate component5() {
        return getStartDate();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public Long component7() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTransactionId();
    }

    @Override
    public Long value3() {
        return getTotalCost();
    }

    @Override
    public LocalDate value4() {
        return getEndDate();
    }

    @Override
    public LocalDate value5() {
        return getStartDate();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public Long value7() {
        return getUserId();
    }

    @Override
    public OrdersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OrdersRecord value2(Long value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public OrdersRecord value3(Long value) {
        setTotalCost(value);
        return this;
    }

    @Override
    public OrdersRecord value4(LocalDate value) {
        setEndDate(value);
        return this;
    }

    @Override
    public OrdersRecord value5(LocalDate value) {
        setStartDate(value);
        return this;
    }

    @Override
    public OrdersRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OrdersRecord value7(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public OrdersRecord values(Long value1, Long value2, Long value3, LocalDate value4, LocalDate value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Long id, Long transactionId, Long totalCost, LocalDate endDate, LocalDate startDate, String status, Long userId) {
        super(Orders.ORDERS);

        setId(id);
        setTransactionId(transactionId);
        setTotalCost(totalCost);
        setEndDate(endDate);
        setStartDate(startDate);
        setStatus(status);
        setUserId(userId);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(com.sldd.persistence.tables.pojos.Orders value) {
        super(Orders.ORDERS);

        if (value != null) {
            setId(value.getId());
            setTransactionId(value.getTransactionId());
            setTotalCost(value.getTotalCost());
            setEndDate(value.getEndDate());
            setStartDate(value.getStartDate());
            setStatus(value.getStatus());
            setUserId(value.getUserId());
        }
    }
}
