/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables;


import com.sldd.persistence.Public;
import com.sldd.persistence.tables.records.OrdersProductDetailsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * The table <code>public.orders_product_details</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersProductDetails extends TableImpl<OrdersProductDetailsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.orders_product_details</code>
     */
    public static final OrdersProductDetails ORDERS_PRODUCT_DETAILS = new OrdersProductDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdersProductDetailsRecord> getRecordType() {
        return OrdersProductDetailsRecord.class;
    }

    /**
     * The column <code>public.orders_product_details.orders_id</code>.
     */
    public final TableField<OrdersProductDetailsRecord, Long> ORDERS_ID = createField(DSL.name("orders_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.orders_product_details.product_details_id</code>.
     */
    public final TableField<OrdersProductDetailsRecord, Long> PRODUCT_DETAILS_ID = createField(DSL.name("product_details_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private OrdersProductDetails(Name alias, Table<OrdersProductDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrdersProductDetails(Name alias, Table<OrdersProductDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.orders_product_details</code> table
     * reference
     */
    public OrdersProductDetails(String alias) {
        this(DSL.name(alias), ORDERS_PRODUCT_DETAILS);
    }

    /**
     * Create an aliased <code>public.orders_product_details</code> table
     * reference
     */
    public OrdersProductDetails(Name alias) {
        this(alias, ORDERS_PRODUCT_DETAILS);
    }

    /**
     * Create a <code>public.orders_product_details</code> table reference
     */
    public OrdersProductDetails() {
        this(DSL.name("orders_product_details"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<UniqueKey<OrdersProductDetailsRecord>> getUniqueKeys() {
        return Arrays.asList(
            Internal.createUniqueKey(OrdersProductDetails.ORDERS_PRODUCT_DETAILS, DSL.name("orders_product_details_product_details_id_key"), new TableField[] { OrdersProductDetails.ORDERS_PRODUCT_DETAILS.PRODUCT_DETAILS_ID }, true)
        );
    }

    @Override
    public OrdersProductDetails as(String alias) {
        return new OrdersProductDetails(DSL.name(alias), this);
    }

    @Override
    public OrdersProductDetails as(Name alias) {
        return new OrdersProductDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdersProductDetails rename(String name) {
        return new OrdersProductDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdersProductDetails rename(Name name) {
        return new OrdersProductDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
