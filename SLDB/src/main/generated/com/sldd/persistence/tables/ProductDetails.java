/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables;


import com.sldd.persistence.Public;
import com.sldd.persistence.tables.records.ProductDetailsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * The table <code>public.product_details</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDetails extends TableImpl<ProductDetailsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.product_details</code>
     */
    public static final ProductDetails PRODUCT_DETAILS = new ProductDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductDetailsRecord> getRecordType() {
        return ProductDetailsRecord.class;
    }

    /**
     * The column <code>public.product_details.id</code>.
     */
    public final TableField<ProductDetailsRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.product_details.product_description</code>.
     */
    public final TableField<ProductDetailsRecord, JSONB> PRODUCT_DESCRIPTION = createField(DSL.name("product_description"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>public.product_details.product_id</code>.
     */
    public final TableField<ProductDetailsRecord, Long> PRODUCT_ID = createField(DSL.name("product_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private ProductDetails(Name alias, Table<ProductDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductDetails(Name alias, Table<ProductDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.product_details</code> table reference
     */
    public ProductDetails(String alias) {
        this(DSL.name(alias), PRODUCT_DETAILS);
    }

    /**
     * Create an aliased <code>public.product_details</code> table reference
     */
    public ProductDetails(Name alias) {
        this(alias, PRODUCT_DETAILS);
    }

    /**
     * Create a <code>public.product_details</code> table reference
     */
    public ProductDetails() {
        this(DSL.name("product_details"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<ProductDetailsRecord, Long> getIdentity() {
        return (Identity<ProductDetailsRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ProductDetailsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(ProductDetails.PRODUCT_DETAILS, DSL.name("PRODUCT_DETAILS_pkey"), new TableField[] { ProductDetails.PRODUCT_DETAILS.ID }, true);
    }

    @Override
    public List<UniqueKey<ProductDetailsRecord>> getUniqueKeys() {
        return Arrays.asList(
            Internal.createUniqueKey(ProductDetails.PRODUCT_DETAILS, DSL.name("product_details_product_id_key"), new TableField[] { ProductDetails.PRODUCT_DETAILS.PRODUCT_ID }, true)
        );
    }

    @Override
    public ProductDetails as(String alias) {
        return new ProductDetails(DSL.name(alias), this);
    }

    @Override
    public ProductDetails as(Name alias) {
        return new ProductDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductDetails rename(String name) {
        return new ProductDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductDetails rename(Name name) {
        return new ProductDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, JSONB, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
