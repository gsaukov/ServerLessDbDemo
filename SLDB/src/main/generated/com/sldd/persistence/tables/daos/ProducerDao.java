/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.daos;


import com.sldd.persistence.tables.Producer;
import com.sldd.persistence.tables.records.ProducerRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.producer</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProducerDao extends DAOImpl<ProducerRecord, com.sldd.persistence.tables.pojos.Producer, Long> {

    /**
     * Create a new ProducerDao without any configuration
     */
    public ProducerDao() {
        super(Producer.PRODUCER, com.sldd.persistence.tables.pojos.Producer.class);
    }

    /**
     * Create a new ProducerDao with an attached configuration
     */
    public ProducerDao(Configuration configuration) {
        super(Producer.PRODUCER, com.sldd.persistence.tables.pojos.Producer.class, configuration);
    }

    @Override
    public Long getId(com.sldd.persistence.tables.pojos.Producer object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Producer> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Producer.PRODUCER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Producer> fetchById(Long... values) {
        return fetch(Producer.PRODUCER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.sldd.persistence.tables.pojos.Producer fetchOneById(Long value) {
        return fetchOne(Producer.PRODUCER.ID, value);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.sldd.persistence.tables.pojos.Producer> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Producer.PRODUCER.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.sldd.persistence.tables.pojos.Producer> fetchByType(String... values) {
        return fetch(Producer.PRODUCER.TYPE, values);
    }
}
