/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.OrdersProducts;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>public.orders_products</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersProductsRecord extends TableRecordImpl<OrdersProductsRecord> implements Record5<Long, Long, BigDecimal, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders_products.order_id</code>.
     */
    public OrdersProductsRecord setOrderId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_products.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.orders_products.product_id</code>.
     */
    public OrdersProductsRecord setProductId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_products.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.orders_products.quantity</code>.
     */
    public OrdersProductsRecord setQuantity(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_products.quantity</code>.
     */
    public BigDecimal getQuantity() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.orders_products.product_cost</code>.
     */
    public OrdersProductsRecord setProductCost(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_products.product_cost</code>.
     */
    public BigDecimal getProductCost() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.orders_products.discount_amount</code>.
     */
    public OrdersProductsRecord setDiscountAmount(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.orders_products.discount_amount</code>.
     */
    public BigDecimal getDiscountAmount() {
        return (BigDecimal) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return OrdersProducts.ORDERS_PRODUCTS.ORDER_ID;
    }

    @Override
    public Field<Long> field2() {
        return OrdersProducts.ORDERS_PRODUCTS.PRODUCT_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return OrdersProducts.ORDERS_PRODUCTS.QUANTITY;
    }

    @Override
    public Field<BigDecimal> field4() {
        return OrdersProducts.ORDERS_PRODUCTS.PRODUCT_COST;
    }

    @Override
    public Field<BigDecimal> field5() {
        return OrdersProducts.ORDERS_PRODUCTS.DISCOUNT_AMOUNT;
    }

    @Override
    public Long component1() {
        return getOrderId();
    }

    @Override
    public Long component2() {
        return getProductId();
    }

    @Override
    public BigDecimal component3() {
        return getQuantity();
    }

    @Override
    public BigDecimal component4() {
        return getProductCost();
    }

    @Override
    public BigDecimal component5() {
        return getDiscountAmount();
    }

    @Override
    public Long value1() {
        return getOrderId();
    }

    @Override
    public Long value2() {
        return getProductId();
    }

    @Override
    public BigDecimal value3() {
        return getQuantity();
    }

    @Override
    public BigDecimal value4() {
        return getProductCost();
    }

    @Override
    public BigDecimal value5() {
        return getDiscountAmount();
    }

    @Override
    public OrdersProductsRecord value1(Long value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrdersProductsRecord value2(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public OrdersProductsRecord value3(BigDecimal value) {
        setQuantity(value);
        return this;
    }

    @Override
    public OrdersProductsRecord value4(BigDecimal value) {
        setProductCost(value);
        return this;
    }

    @Override
    public OrdersProductsRecord value5(BigDecimal value) {
        setDiscountAmount(value);
        return this;
    }

    @Override
    public OrdersProductsRecord values(Long value1, Long value2, BigDecimal value3, BigDecimal value4, BigDecimal value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersProductsRecord
     */
    public OrdersProductsRecord() {
        super(OrdersProducts.ORDERS_PRODUCTS);
    }

    /**
     * Create a detached, initialised OrdersProductsRecord
     */
    public OrdersProductsRecord(Long orderId, Long productId, BigDecimal quantity, BigDecimal productCost, BigDecimal discountAmount) {
        super(OrdersProducts.ORDERS_PRODUCTS);

        setOrderId(orderId);
        setProductId(productId);
        setQuantity(quantity);
        setProductCost(productCost);
        setDiscountAmount(discountAmount);
    }

    /**
     * Create a detached, initialised OrdersProductsRecord
     */
    public OrdersProductsRecord(com.sldd.persistence.tables.pojos.OrdersProducts value) {
        super(OrdersProducts.ORDERS_PRODUCTS);

        if (value != null) {
            setOrderId(value.getOrderId());
            setProductId(value.getProductId());
            setQuantity(value.getQuantity());
            setProductCost(value.getProductCost());
            setDiscountAmount(value.getDiscountAmount());
        }
    }
}
