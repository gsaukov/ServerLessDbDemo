/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.users</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record5<Long, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public UsersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.phone</code>.
     */
    public UsersRecord setPhone(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.phone</code>.
     */
    public String getPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.full_name</code>.
     */
    public UsersRecord setFullName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.full_name</code>.
     */
    public String getFullName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.account_id</code>.
     */
    public UsersRecord setAccountId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.PHONE;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.FULL_NAME;
    }

    @Override
    public Field<Long> field5() {
        return Users.USERS.ACCOUNT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPhone();
    }

    @Override
    public String component4() {
        return getFullName();
    }

    @Override
    public Long component5() {
        return getAccountId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPhone();
    }

    @Override
    public String value4() {
        return getFullName();
    }

    @Override
    public Long value5() {
        return getAccountId();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public UsersRecord value5(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String email, String phone, String fullName, Long accountId) {
        super(Users.USERS);

        setId(id);
        setEmail(email);
        setPhone(phone);
        setFullName(fullName);
        setAccountId(accountId);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(com.sldd.persistence.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setEmail(value.getEmail());
            setPhone(value.getPhone());
            setFullName(value.getFullName());
            setAccountId(value.getAccountId());
        }
    }
}
