/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.pojos;


import java.io.Serializable;


/**
 * The table <code>public.users</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long   id;
    private final String email;
    private final String fullName;
    private final Long   userDescriptionId;

    public Users(Users value) {
        this.id = value.id;
        this.email = value.email;
        this.fullName = value.fullName;
        this.userDescriptionId = value.userDescriptionId;
    }

    public Users(
        Long   id,
        String email,
        String fullName,
        Long   userDescriptionId
    ) {
        this.id = id;
        this.email = email;
        this.fullName = fullName;
        this.userDescriptionId = userDescriptionId;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.users.full_name</code>.
     */
    public String getFullName() {
        return this.fullName;
    }

    /**
     * Getter for <code>public.users.user_description_id</code>.
     */
    public Long getUserDescriptionId() {
        return this.userDescriptionId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (fullName == null) {
            if (other.fullName != null)
                return false;
        }
        else if (!fullName.equals(other.fullName))
            return false;
        if (userDescriptionId == null) {
            if (other.userDescriptionId != null)
                return false;
        }
        else if (!userDescriptionId.equals(other.userDescriptionId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.fullName == null) ? 0 : this.fullName.hashCode());
        result = prime * result + ((this.userDescriptionId == null) ? 0 : this.userDescriptionId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(email);
        sb.append(", ").append(fullName);
        sb.append(", ").append(userDescriptionId);

        sb.append(")");
        return sb.toString();
    }
}
