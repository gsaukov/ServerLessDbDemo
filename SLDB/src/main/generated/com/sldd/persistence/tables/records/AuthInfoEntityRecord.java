/*
 * This file is generated by jOOQ.
 */
package com.sldd.persistence.tables.records;


import com.sldd.persistence.tables.AuthInfoEntity;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.auth_info_entity</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthInfoEntityRecord extends UpdatableRecordImpl<AuthInfoEntityRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.auth_info_entity.id</code>.
     */
    public AuthInfoEntityRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info_entity.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.auth_info_entity.login</code>.
     */
    public AuthInfoEntityRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info_entity.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.auth_info_entity.password</code>.
     */
    public AuthInfoEntityRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info_entity.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.auth_info_entity.user_id</code>.
     */
    public AuthInfoEntityRecord setUserId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.auth_info_entity.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuthInfoEntity.AUTH_INFO_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return AuthInfoEntity.AUTH_INFO_ENTITY.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return AuthInfoEntity.AUTH_INFO_ENTITY.PASSWORD;
    }

    @Override
    public Field<Long> field4() {
        return AuthInfoEntity.AUTH_INFO_ENTITY.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public AuthInfoEntityRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuthInfoEntityRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public AuthInfoEntityRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AuthInfoEntityRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuthInfoEntityRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthInfoEntityRecord
     */
    public AuthInfoEntityRecord() {
        super(AuthInfoEntity.AUTH_INFO_ENTITY);
    }

    /**
     * Create a detached, initialised AuthInfoEntityRecord
     */
    public AuthInfoEntityRecord(Long id, String login, String password, Long userId) {
        super(AuthInfoEntity.AUTH_INFO_ENTITY);

        setId(id);
        setLogin(login);
        setPassword(password);
        setUserId(userId);
    }

    /**
     * Create a detached, initialised AuthInfoEntityRecord
     */
    public AuthInfoEntityRecord(com.sldd.persistence.tables.pojos.AuthInfoEntity value) {
        super(AuthInfoEntity.AUTH_INFO_ENTITY);

        if (value != null) {
            setId(value.getId());
            setLogin(value.getLogin());
            setPassword(value.getPassword());
            setUserId(value.getUserId());
        }
    }
}
